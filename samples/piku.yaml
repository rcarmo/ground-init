#cloud-config

# This file is meant to set up Piku (github.com/piku) on Debian 11 (tested on a Pi Zero 2):

package_upgrade: true

packages:
  - ntp
  - tmux
  - htop
  - btop
  - vim
  - fail2ban
  - curl
  - wget
  - sudo
  - mosh
  - net-tools
  # Backups
  - restic
  # This includes some dev packages for common deployments
  - build-essential
  - libxml2-dev
  - libxslt1-dev
  - libyaml-cpp-dev
  - zlib1g-dev
  - sqlite3
  - libavahi-compat-libdnssd-dev
  # Image processing libraries
  - libcairo2-dev
  - libpango1.0-dev
  - libjpeg-dev
  - libgif-dev 
  - librsvg2-dev
  # Other libraries
  - libffi-dev 
  - libsasl2-dev
  - libldap2-dev
  # Clojure (will bring in OpenJDK 11)
  #- leiningen
  # Piku stack, plus helpers
  - git
  - certbot
  - nginx
  - python3-certbot-nginx
  - python3-dev
  - python3-pip
  - python3-click
  - python3-virtualenv
  - python-is-python3
  - uwsgi
  - uwsgi-plugin-python3
  - uwsgi-plugin-asyncio-python3
  - uwsgi-plugin-gevent-python3
  - uwsgi-plugin-greenlet-python3
  - uwsgi-plugin-tornado-python3
  # disabled by default to save space
  #- uwsgi-plugin-jwsgi-openjdk-11
  - uwsgi-plugin-php
  - uwsgi-plugin-lua5.1
  - uwsgi-plugin-lua5.2
  - uwsgi-plugin-luajit
  # Optional services (Ubuntu default packages bind these to localhost, be wary of exposed ports if using other distros)
  # - mosquitto
  # - redis
  # - mongodb-server
  # - postgresql
  
write_files:
  - path: /etc/nginx/sites-available/default
    content: |
      server {
          listen 80 default_server;
          listen [::]:80 default_server;
          root /var/www/html;
          index index.html index.htm;
          server_name _;
          location / {
              try_files $uri $uri/ =404;
          }
      }
      include /home/piku/.piku/nginx/*.conf;

  - path: /etc/uwsgi/apps-enabled/piku.ini
    content: |
      [uwsgi]
      chdir = /home/piku/.piku/uwsgi
      emperor = /home/piku/.piku/uwsgi-enabled
      log-maxsize = 1048576
      logto = /home/piku/.piku/uwsgi/uwsgi.log
      log-backupname = /home/piku/.piku/uwsgi/uwsgi.old.log
      socket = /home/piku/.piku/uwsgi/uwsgi.sock
      uid = piku
      gid = www-data
      enable-threads = true
      threads = 2

  - path: /etc/systemd/system/piku-nginx.path
    content: |
      [Unit]
      Description=Monitor .piku/nginx for changes

      [Path]
      PathChanged=/home/piku/.piku/nginx
      Unit=piku-nginx.service

      [Install]
      WantedBy=multi-user.target
  
  - path: /etc/systemd/system/piku-nginx.service
    content: |
      [Unit]
      Description=Restarts nginx when .piku/nginx changes.

      [Service]
      Type=simple
      ExecStart=/bin/systemctl reload nginx

      [Install]
      WantedBy=multi-user.target
  
  # If you change the SSH port, don't forget to edit this accordingly
  #- path: /etc/fail2ban/jail.d/defaults-debian.conf
  #  content: |
  #    [sshd]
  #    enabled = true
  #    port = 22

  # Ensure we have inotify working (some of my apps require it)
  - path: /etc/sysctl.conf
    append: true
    content: |
        fs.inotify.max_user_watches=1048576

runcmd:
  # Adjust to taste
  - timedatectl set-timezone Europe/Lisbon
  # Take any already existing authorized_keys and make a copy, so we can add them as Piku users later
  - cat /home/*/.ssh/authorized_keys | head -1 > /tmp/id_rsa.pub
  # Now we can add the Piku user and do the remaining setup
  - adduser --disabled-password --gecos 'PaaS access' --ingroup www-data piku
  - su - piku -c "wget https://raw.githubusercontent.com/piku/piku/master/piku.py && python3 ~/piku.py setup"
  - ln /home/piku/.piku/uwsgi/uwsgi.ini /etc/uwsgi/apps-enabled/piku.ini
  - su - piku -c "python3 ~/piku.py setup:ssh /tmp/id_rsa.pub"
  # Remove snaps
  - sudo apt-get purge snapd -y
  # Install nodesource LTS version
  - curl -sL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
  - apt-get install -y nodejs
  # Some IoT settings I need
  # - usermod -a -G uucp piku
  # - usermod -a -G tty piku
  # - usermod -a -G dialout piku
  # Basic hygiene in case there are any outstanding dependency changes
  - apt-get update -y
  - apt-get dist-upgrade -y
  - apt-get autoremove -y
  - systemctl enable piku-nginx
  - systemctl enable piku-nginx.path
  # This will clean out /tmp as well
  - reboot
